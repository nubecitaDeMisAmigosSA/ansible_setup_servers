name: Ansible Check on Pull Request

on:
  pull_request:
    branches:
      - main

permissions:
  pull-requests: write
  contents: read
  id-token: write

jobs:
  ansible-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.ANSIBLE_PRIVATE_KEY }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Ansible
        run: |
          pip install ansible

      - name: Run Ansible playbook in check mode
        id: ansible-check
        run: |
          ansible-playbook --check servers.yml | tee ansible_output.txt

      - name: Set Outcomes as Env Vars
        run: |
          echo "ANSIBLE_OUTCOME=$(cat ansible_output.txt)" >> $GITHUB_ENV

      - name: Comment on pull request
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `
            #### Ansible Check Output:
            \`\`\`
            ${process.env.ANSIBLE_OUTCOME}
            \`\`\`
            `;

            // Retrieve existing comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            // Check if a comment from the bot already exists
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Ansible Check Output');
            });

            if (botComment) {
              // If a comment exists, update it
              github.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              });
            } else {
              // If no comment exists, create a new one
              github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: output
              });
            }
